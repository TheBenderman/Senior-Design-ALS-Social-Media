
class TreeDataSource 
{
  function this(root = null) {
    if(root && (root like "file://*"))
      root = root.substr(7);
    this.root = root;
  }

  // mandatory public interface methods:
 
  // call cb(caption,path,isFolder) for each root item
  function eachRoot(cb)
  {
    if( this.root ) 
      cb("folder", this.root, true);
    else if( System.PLATFORM == #Windows )
      cb("Drive c:","c:", true);
    else   
      cb("FS root","", true);
  }
  
  // call cb(caption,path,isFolder) for each child item of the path"
  function eachChild(path,cb)
  {
    var folders = [];
    var files = [];
  
    function w(name, flags)
    {
      if(name == "." || name == "..") return true; // skip it   
      if(flags & (System.IS_HIDDEN | System.IS_SYSTEM)) return true; // skip it   
      if((flags & System.IS_DIR) != 0)
        folders.push(name);
      else
        files.push(name);
      return true;
    }
    System.scanFiles(path + "/*.*", w);
    
    folders.sort(:a,b: a.lexicalCompare(b));
    files.sort(:a,b: a.lexicalCompare(b));
    for(var n in folders)    
      cb(n,path + "/" + n, true);
    for(var n in files)    
      cb(n,path + "/" + n, false);
    
  }
  
}

